JSDoc2Doxygen
=============

Namespace -> package
-------------------
/**
 * @namespace <namespace NAME>
 * @classDesc <namespace DESCRIPTION>
 */
 ==>
 /**
 <namespace description>
 */
 package <namespace name> ;

Class
--------------------
/**
 * @class <CLASS NAME>
 * @extends <PARENT NAME>
 * @classDesc <CLASS DESCRIPTION>
 */
==>
/**
<CLASS DESCRIPTION>
*/
public class <CLASS NAME> extends <PARENT NAME>{
}

Function
--------------------
/**
   * @function <FUNCTIONNAME>
   * @desc <FUNCTIONDESCRIPTION>
   * (optional)<br><b>Remarks:</b><br>
   * (optional)@private
   * (optional)@static/instance
   * @memberOf <CLASS NAME>
   * @param {TYPE} NAME DESCRIPTION.
   * @return {TYPE} DESCRIPTION.
   * @example
LINES OF EXAMPLES
   */
==>
/**
<FUNCTIONDESCRIPTION>
* @param {TYPE} NAME DESCRIPTION.
* @return {TYPE} DESCRIPTION.
<br><br>* @code
LINES OF EXAMPLES
* @endcode
   */
*/
//put into class: <CLASS NAME>
public (static) <RETTYPE> <FUNCTIONNAME>(<PTYPE> <PNAME>, ...){};

Table
-----------------
complex table should in @htmlonly @endhtmlonly block.(Both markdown file and function doc work well).


Link
-----------------
+link to file: [customized video layout](docs/layout.md)
+link to http: <a href="http://www.intel.com">intel</a>
{@link https://software.intel.com/sites/landingpage/webrtc/#|WebRTC}<br>
+link to class:
{@link Webrtc.JsdocDemo|Webrtc.JsdocDemo}
{@link Webrtc.JsdocDemo Webrtc.JsdocDemo}
+link to function:
{@link Webrtc.JsdocDemo.NormalFunc|Webrtc.JsdocDemo.NormalFunc()}->
{@link Webrtc.JsdocDemo#NormalFunc Webrtc.JsdocDemo.NormalFunc()}
+link to markdown section:
in markdown file, add section label of header
# HEADER {#HEADER_LABEL}
then link it like so
[LINK_ANCHOR](@ref HEADER_LABEL)


